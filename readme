Эмуляция кластера распределенных нод, обменивающихся сообщениями.

###
Зависимости
###
Oracle JDK 8
Bash shell
socat

###
Сборка проекта
###
$ sbt assembly
в target/scala-2.11 будет собран all-in-one jar

###
Конфигурация кластера
###
В файле conf.sh можно задать настройки

###
Запуск кластера
###
$ createNodes.sh N
где N - количество нод кластера

###
Остановка кластера
###
При запуске кластера формируется файл cluster.pid со сриском id процессов нод.
Пример команды для остановки всех нод кластера
$ cat cluster.pid | xargs kill && rm cluster.pid

###
Запуск отправки сообщений
###
Запуск отправки на всех нодах кластера
$ start.sh
Запуск отправки на части нод кластера
$ start.sh M
где M - колтчество нод, на которых требуется запустить обработку, M < N.

###
Остановка нод
###
Остановка отправки сообщений на всех нодах кластера
$ stop.sh
Остановка отправки сообщений на части нод
$ stop.sh M
где M - номер ноды, все ноды, у которых собственны номер N > M, остановят отправку.

###
Смена интервала отправки сообщений в кластере
###
$ changeTs T
где T - инетрвал между сообщениями, в формат scala.concurrent.Duration
Пример:
$ changeTs "50 millis"

###
Получение текущей производительности кластера
###
$ avg.sh
Команда получает и выводит в консоль среднее количество сообщений, обрабатываемых каждой нодой.
Для подсчета, сколько всего сообщений обрабатывается всеми нодами, можно воспользоваться командой
$ avg.sh | awk -F " " '{s+=$2} END { print s }'
Теоретический предел - количетсво сообщений в секунду, обрабатываемое всеми нодами кластера,
расчитывается по формуле N^2 / T.